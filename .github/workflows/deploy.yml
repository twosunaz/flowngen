name: Deploy to DigitalOcean

on:
    push:
        branches:
            - release

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            - name: üì• Checkout repo
              uses: actions/checkout@v3

            - name: üîê Set up SSH
              run: |
                  mkdir -p ~/.ssh
                  echo "${{ secrets.DO_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
                  chmod 600 ~/.ssh/id_rsa

                  echo "üì° Adding host to known_hosts..."
                  ssh-keyscan -H 165.227.28.110 >> ~/.ssh/known_hosts || {
                    echo "‚ùå ssh-keyscan failed"
                    exit 1
                  }

            - name: üõ†Ô∏è Generate .env.production from GitHub Secrets
              run: |
                  cat <<EOF > .env.production
                  # Server
                  PORT=3001

                  # Storage
                  DATABASE_TYPE=${{ secrets.DATABASE_TYPE }}
                  DATABASE_HOST=${{ secrets.DATABASE_HOST }}
                  DATABASE_PORT=${{ secrets.DATABASE_PORT }}
                  DATABASE_NAME=${{ secrets.DATABASE_NAME }}
                  DATABASE_USER=${{ secrets.DATABASE_USER }}
                  DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
                  DATABASE_SSL=${{ secrets.DATABASE_SSL }}
                  DATABASE_SSL_KEY_BASE64=${{ secrets.DATABASE_SSL_KEY_BASE64 }}

                  # File system
                  BLOB_STORAGE_PATH=/root/.flowise/storage
                  APIKEY_PATH=/root/.flowise
                  SECRETKEY_PATH=/root/.flowise
                  LOG_PATH=/root/.flowise/logs
                  EOF

            - name: üöÄ SSH and deploy with keep-alive
              run: |
                  ssh root@165.227.28.110 << 'EOF'
                    set -e
                    echo "üìÅ Navigating to project directory..."
                    cd ~/flowngen

                    echo "üîÑ Pulling latest changes..."
                    git pull origin release

                    echo "üõ†Ô∏è Building Docker containers..."
                    ( while true; do echo "üåÄ Still deploying at \$(date)..."; sleep 60; done ) & 
                    KEEP_ALIVE_PID=$!

                    docker-compose -f docker-compose.prod.yml up --build -d

                    kill $KEEP_ALIVE_PID
                    echo "‚úÖ Deployment completed!"
                  EOF
